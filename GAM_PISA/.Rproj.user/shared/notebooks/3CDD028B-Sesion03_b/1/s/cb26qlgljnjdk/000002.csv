"0","```r


#Linear splines
lsp <- lm(accel ~ times + X1 + X2 + X3 + X4, data = mcycle) #X1, X2, etc son los nudos q he hecho
summary(lsp)
```"
"1","
Call:
lm(formula = accel ~ times + X1 + X2 + X3 + X4, data = mcycle)

Residuals:
    Min      1Q  Median      3Q     Max 
-82.740 -12.593   1.321  10.996  52.514 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   8.4528    10.7829   0.784  0.43455    
times        -1.6286     0.8911  -1.828  0.06996 .  
X1          -22.6321     2.3485  -9.637  < 2e-16 ***
X2           39.7390     2.4738  16.064  < 2e-16 ***
X3          -21.9223     1.9785 -11.080  < 2e-16 ***
X4            6.7149     1.9103   3.515  0.00061 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 23.52 on 127 degrees of freedom
Multiple R-squared:  0.772,	Adjusted R-squared:  0.763 
F-statistic: 86.01 on 5 and 127 DF,  p-value: < 2.2e-16
"
"0","```r
newdat <- data.frame(times = seq(0,60,0.01)) #hago cuadraticos
newdat$X1 <- pmax(0, newdat$times - knots[1])
newdat$X2 <- pmax(0, newdat$times - knots[2])
newdat$X3 <- pmax(0, newdat$times - knots[3])
newdat$X4 <- pmax(0, newdat$times - knots[4])
newdat$linear <- predict(lsp, newdata = newdat)

#Quadratic splines
qsp <- lm(accel ~ times + I(times^2) + I(X1^2) + I(X2^2) + I(X3^2) + I(X4^2), data = mcycle) #los hago manualmente
summary(qsp)
```"
"1","
Call:
lm(formula = accel ~ times + I(times^2) + I(X1^2) + I(X2^2) + 
    I(X3^2) + I(X4^2), data = mcycle)

Residuals:
    Min      1Q  Median      3Q     Max 
-87.815 -20.748   0.032  21.613  76.130 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) -72.8237    26.4683  -2.751  0.00681 ** 
times        22.9006     5.6727   4.037 9.34e-05 ***
I(times^2)   -1.3995     0.2653  -5.274 5.63e-07 ***
I(X1^2)       3.7175     0.6258   5.941 2.59e-08 ***
I(X2^2)      -2.0250     0.4977  -4.069 8.27e-05 ***
I(X3^2)      -1.5047     0.3416  -4.405 2.24e-05 ***
I(X4^2)       1.6797     0.3587   4.683 7.19e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 31.13 on 126 degrees of freedom
Multiple R-squared:  0.6039,	Adjusted R-squared:  0.585 
F-statistic: 32.02 on 6 and 126 DF,  p-value: < 2.2e-16
"
"0","```r
newdat$quadratic <- predict(qsp, newdata = newdat)

#Cubic splines
csp <- lm(accel ~ times + I(times^2) + I(times^3) + I(X1^3) + I(X2^3) + I(X3^3) + I(X4^3), data = mcycle)
summary(csp)
```"
"1","
Call:
lm(formula = accel ~ times + I(times^2) + I(times^3) + I(X1^3) + 
    I(X2^3) + I(X3^3) + I(X4^3), data = mcycle)

Residuals:
    Min      1Q  Median      3Q     Max 
-93.458 -13.221  -0.257  13.418  49.473 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)  25.93411   32.92156   0.788  0.43233    
times       -15.20812   11.31370  -1.344  0.18131    
I(times^2)    2.29557    1.10198   2.083  0.03928 *  
I(times^3)   -0.10146    0.03226  -3.145  0.00208 ** 
I(X1^3)       0.50733    0.07129   7.116 7.63e-11 ***
I(X2^3)      -0.58777    0.05460 -10.765  < 2e-16 ***
I(X3^3)       0.34484    0.03304  10.437  < 2e-16 ***
I(X4^3)      -0.21077    0.03528  -5.974 2.24e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 24.23 on 125 degrees of freedom
Multiple R-squared:  0.7618,	Adjusted R-squared:  0.7485 
F-statistic: 57.13 on 7 and 125 DF,  p-value: < 2.2e-16
"
"0","```r
newdat$cubic <- predict(csp, newdata = newdat)

#Plot splines
newdatMelt <- melt(data          = newdat,
                   id.vars       = c(\"times\",paste0(\"X\",1:4)),
                   variable.name = \"spline\",
                   value.name    = \"value\")

baseplot1 +
    layer(geom = \"line\", data = newdatMelt,stat = \"identity\", position = \"identity\",
          mapping = aes(x = times, y = value, color = spline)) +
    facet_wrap( ~ spline, ncol = 1)

```"
